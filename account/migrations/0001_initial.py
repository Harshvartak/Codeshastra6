# Generated by Django 3.0.3 on 2020-03-07 18:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=200)),
                ('age', models.IntegerField(default=0)),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=15)),
                ('is_therapist', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='patient_pic')),
                ('phone', models.CharField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be valid', regex='^\\+?1?\\d{9,10}$')])),
                ('Address', models.TextField()),
                ('twitter_address', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='patient_pic')),
                ('phone', models.CharField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be valid', regex='^\\+?1?\\d{9,10}$')])),
                ('Address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Educ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('certificate', models.FileField(upload_to='filer/')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Therapist')),
            ],
        ),
    ]
